[20200514]
0752 Capek. Istirahat dulu. Belum arsipkan WA ke AW.


[20200513]
2331 Capek, sholat, lalu istrirahat. Baca dulu bila memungkinkan.

[17:40, 13/05/2020] dudung.github.io: https://rawcdn.githack.com/dudung/butiran.js/7a2dec627802dd426f86ed3c292b178a43820508/app/fr0sir/fr0sir2.html

Ada masalah baru. Dengan data yang ada saat 2020-02-28 hampir semua data I = 0 sehingga model SIR tidak bekerja
[17:41, 13/05/2020] dudung.github.io: Jadi perlu algoritma bahwa t = 0 bukanlah pada hari awal data, tetapi saat mulai ada yang terinfeksi.
[17:41, 13/05/2020] dudung.github.io: Atau ad usul lain?
[17:42, 13/05/2020] PREMISE Aristyo: kalau begitu mungkin mulai dari tanggal 2 pak... saat ada infeksi pertama?
[17:42, 13/05/2020] dudung.github.io: Model SIR / SEIR / SEIRD harus punya I != 0 saat t = 0, bila tidak tidak ada sumber penularan.
[17:42, 13/05/2020] dudung.github.io: Iya, tapi bisa jadi beda provinsi beda ya?
[17:42, 13/05/2020] dudung.github.io: Saya akan coba buat, dicari dulu kapan mulai tidak nol dan itu dijadikan t = 0 untuk Region tersebut.
[17:43, 13/05/2020] PREMISE Aristyo: betul, pak... bisa jadi setiap provinsi berbeda SEIRnya
[17:43, 13/05/2020] dudung.github.io: Ok. Nuhun infonya.
[18:31, 13/05/2020] PREMISE Aristyo: sama-sama, pak...
[23:14, 13/05/2020] dudung.github.io: https://rawcdn.githack.com/dudung/butiran.js/603dee32ffb42e1669586cf211c92190599c3421/app/fr0sir/fr0sir2.html

Untuk a (laju infeksi akibat kontak) sudah dapat untuk data buatan (lihat Artificial data di bawah Total), yang dua lagi masih bermasalah.

Silakan dipelajari.


[20200512]
2258 Capek. Istrirahat dan sholat dulu.

[21:53, 12/05/2020] PREMISE Aristyo: begitu ya pak ya?
[21:54, 12/05/2020] PREMISE Aristyo: kenapa tidak pakai kasus aktif ya pak?
[21:54, 12/05/2020] dudung.github.io: https://en.wikipedia.org/wiki/Gradient_descent
[21:55, 12/05/2020] dudung.github.io: Saya hanya dapat data yang itu.
[21:55, 12/05/2020] PREMISE Aristyo: oh begitu ya, pak...
[21:55, 12/05/2020] dudung.github.io: Tapi kuatir juga bahwa Npop, a, S(0), I(0), R(0) juga berpengaruh. Bila, ya, maka optimasinya bisa n-dimensi.
[21:56, 12/05/2020] PREMISE Aristyo: mungkin bisa kami bantu siapkan aktif case yang se Indonesia, pak..
[21:56, 12/05/2020] dudung.github.io: Iya, tolong agar saya bisa berikan ilustrasi yang lebih tepat.
[22:00, 12/05/2020] PREMISE Aristyo: baik pak.. sedang kami siapkan
[22:02, 12/05/2020] PREMISE Aristyo: berikut datanya, pak...
[22:53, 12/05/2020] dudung.github.io: https://rawcdn.githack.com/dudung/butiran.js/72dbd056284f3ccea469c183e036abb86647a825/app/fr0sir/fr0sir.html

Sudah jalan yang gradient descent. Bisa dicoba kedua tombolnya untuk melihat perbedaannya.
[22:55, 12/05/2020] dudung.github.io: Jadi targetnya mencari R0 untuk setiap propinsi, ya?
[22:55, 12/05/2020] PREMISE Aristyo: betul, pak... karena kita ingin relaksasi PSBB
[22:55, 12/05/2020] PREMISE Aristyo: soalnya masyarakat tidak bisa makan, pak..
[22:55, 12/05/2020] dudung.github.io: Iya.
[22:56, 12/05/2020] dudung.github.io: Sementara ilustrasinya masih pakai SIR, ya. Tinggal nanti dimodif dengan SEIR. Belum sempat saya ngoprek yang SEIR.

[23:14, 12/05/2020] PREMISE Aristyo: Siap pak.. terima kasih, pak

[21:44, 12/05/2020] dudung.github.io: https://rawcdn.githack.com/dudung/butiran.js/01f7568f7ced47145ee41b2aedce58cf8a2ebe42/app/fr0sir/fr0sir.html

Ini yang masih manual. Belum menerapkan yang didiskusikan kemarin.

[21:46, 12/05/2020] PREMISE Aristyo: wah terima kasih, pak... aka kami coba diskusikan disini
[21:47, 12/05/2020] dudung.github.io: Sourcenya di https://github.com/dudung/butiran.js/tree/master/app/fr0sir  ya
[21:51, 12/05/2020] dudung.github.io: Yang perlu dibuat adalah fungsi untuk menghitung error dari data dengan prediksi bila digunakan R0 tertentu, seperti

error_1 = func(R0_1, data, waktu-prediksi)
error_2 = func(R0_2, data, waktu-prediksi)

R0_3 = R0_2 - c * (error_2 - error_1) / (R0_2 - R0_1)

[21:52, 12/05/2020] dudung.github.io: R0_1 dan R_02 adalah dua tebakan awal R0

Nanti setelah beberapa kali iterasi R0_n akan memberikan hasil terbaik dengan error_n terkecil, secara hipotesis demikian.

Parameter c masih perlu dimainkan.


[20200511]
Komunikasi lewat WAG.
[13:32, 11/05/2020] PREMISE Aristyo: Selamat siang, Pak...
[13:33, 11/05/2020] PREMISE Aristyo: mohon izin, pak bertanya... untuk menghitung R0 yang sederhana bagaimana ya, pak?
[18:33, 11/05/2020] dudung.github.io: Selamat malam, Pak Tyo. Itu pertanyaan saja sejak awal kita diskusi.
[18:33, 11/05/2020] dudung.github.io: Yang terpikir adalah fiting dengan data.
[18:37, 11/05/2020] dudung.github.io: 1. Jalankan model dengan R0 tebakan.
2. Hasil model dihitung errornya dengan data yang ada |obs - model| untuk setiap data ke i. Jumlahkan untuk dapat error total
3. Lalu R0 diubah dengan suatu nilai, misalnya +dR0 * c. Lalu lakukan langkah ke 2.
4. Bila error total membesar kembali ke R0 semula akan tetapi -dR0 * c
5. Bila error total mengecil lakukan langkah semula sampai error diperoleh minimum.
6. Nilai c akan menentukan seberapa cepat perubahan R0. Terlalu besar hasil bisa tidak stabil
7. Idealnya bila R0 sudah tepat error akan nol sehingga R0 tidak lagi berubah.
